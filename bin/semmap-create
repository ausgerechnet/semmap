from argparse import ArgumentParser
from glob import glob

from semmap.semspace import SemanticSpace, read_ccc_tables


def main(paths, magnitude_path, p_query='lemma'):

    print(f"reading {len(paths)} dataframes")
    df = read_ccc_tables(paths).reset_index().dropna(subset=[p_query])

    items = list(set(df[p_query]))
    print(f"creating semantic space for {len(items)} items")
    semspace = SemanticSpace(magnitude_path)
    coordinates = semspace.generate2d(items)

    df = df.join(coordinates, on='lemma')

    return df


if __name__ == '__main__':

    magnitude_path = (
        "/home/ausgerechnet/corpora/embeddings/magnitude/"
        "deWikiWord2Vec.magnitude"
    )

    parser = ArgumentParser()
    parser.add_argument("glob",
                        type=str,
                        help="")
    parser.add_argument("path_out",
                        type=str,
                        help="path to save result to (.tsv.gz)")
    args = parser.parse_args()

    paths = glob(args.glob)

    df = main(paths, magnitude_path)

    df.to_csv(args.path_out, sep="\t", index=False, compression="gzip")
