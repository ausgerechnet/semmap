#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import argparse
import gzip
import shutil

from semmap.embeddings import read_fasttext_items, create_embeddings


if __name__ == '__main__':

    parser = argparse.ArgumentParser(
        description="update LLM embeddings",
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument('path_items', help="gzipped file with new items")
    parser.add_argument('path_embeddings', help="existing embeddings in fasttext format")
    parser.add_argument('path_new_embeddings', help="existing embeddings in fasttext format")
    parser.add_argument("--model", default="paraphrase-multilingual-MiniLM-L12-v2", help="sentence-transformers model")
    args = parser.parse_args()

    with gzip.open(args.path_items, "rt") as f:
        items_new = f.read().rstrip().split("\n")

    print("copying embeddings")
    shutil.copyfile(args.path_embeddings, args.path_new_embeddings)

    print("getting old items")
    items_old = read_fasttext_items(args.path_embeddings)

    items = list(set(items_new) - set(items_old))
    if len(items) > 0:
        create_embeddings(items, args.model, args.path_new_embeddings, mode='at')
    else:
        print("no new items")
